// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: taskList.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TaskListKhvatskova {

  /// <summary>Holder for reflection information generated from taskList.proto</summary>
  public static partial class TaskListReflection {

    #region Descriptor
    /// <summary>File descriptor for taskList.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TaskListReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg50YXNrTGlzdC5wcm90bxIIdGFza0xpc3QiRAoLTnVsbFJlcXVlc3QSNQoR",
            "ZXhhbWluYXRpb25fcmVwbHkYASABKAsyGi50YXNrTGlzdC5FeGFtaW5hdGlv",
            "blJlcGx5Iq4BCgtUYXNrUmVxdWVzdBIOCgZUYXNrSWQYASABKAUSDAoETmFt",
            "ZRgCIAEoCRITCgtEZXNjcmlwdGlvbhgDIAEoCRIRCglUYXNrU3RhdGUYBCAB",
            "KAgSEgoKRXhlY3V0b3JJZBgFIAEoBRIOCgZUYWdzSWQYBiADKAUSNQoRZXhh",
            "bWluYXRpb25fcmVwbHkYByABKAsyGi50YXNrTGlzdC5FeGFtaW5hdGlvblJl",
            "cGx5IqwBCglUYXNrUmVwbHkSDgoGVGFza0lkGAEgASgFEgwKBE5hbWUYAiAB",
            "KAkSEwoLRGVzY3JpcHRpb24YAyABKAkSEQoJVGFza1N0YXRlGAQgASgIEhIK",
            "CkV4ZWN1dG9ySWQYBSABKAUSDgoGVGFnc0lkGAYgAygFEjUKEWV4YW1pbmF0",
            "aW9uX3JlcGx5GAcgASgLMhoudGFza0xpc3QuRXhhbWluYXRpb25SZXBseSIy",
            "CgxBbGxUYXNrUmVwbHkSIgoFVGFza3MYASADKAsyEy50YXNrTGlzdC5UYXNr",
            "UmVwbHkieQoNRXhlY3V0b3JSZXBseRI1ChFleGFtaW5hdGlvbl9yZXBseRgB",
            "IAEoCzIaLnRhc2tMaXN0LkV4YW1pbmF0aW9uUmVwbHkSEgoKRXhlY3V0b3JJ",
            "ZBgCIAEoBRIMCgROYW1lGAMgASgJEg8KB1N1cm5hbWUYBCABKAkiRAoPRXhl",
            "Y3V0b3JSZXF1ZXN0EhIKCkV4ZWN1dG9ySWQYASABKAUSDAoETmFtZRgCIAEo",
            "CRIPCgdTdXJuYW1lGAMgASgJIj4KEEFsbEV4ZWN1dG9yUmVwbHkSKgoJRXhl",
            "Y3V0b3JzGAEgAygLMhcudGFza0xpc3QuRXhlY3V0b3JSZXBseSI4CgpUYWdS",
            "ZXF1ZXN0Eg0KBVRhZ0lkGAEgASgFEgwKBE5hbWUYAiABKAkSDQoFQ29sb3IY",
            "AyABKAkibQoIVGFnUmVwbHkSDQoFVGFnSWQYASABKAUSDAoETmFtZRgCIAEo",
            "CRINCgVDb2xvchgDIAEoCRI1ChFleGFtaW5hdGlvbl9yZXBseRgEIAEoCzIa",
            "LnRhc2tMaXN0LkV4YW1pbmF0aW9uUmVwbHkiLwoLQWxsVGFnUmVwbHkSIAoE",
            "VGFncxgBIAMoCzISLnRhc2tMaXN0LlRhZ1JlcGx5IlwKEEV4YW1pbmF0aW9u",
            "UmVwbHkSGgoSYXJndW1lbnRfZXhjZXB0aW9uGAEgASgIEhsKE25vdF9mb3Vu",
            "ZF9leGNlcHRpb24YAiABKAgSDwoHcHJvYmxlbRgDIAEoCDKTCAoJdGFza3NM",
            "aXN0EjwKC0dldEFsbFRhc2tzEhUudGFza0xpc3QuTnVsbFJlcXVlc3QaFi50",
            "YXNrTGlzdC5BbGxUYXNrUmVwbHkSNQoHR2V0VGFzaxIVLnRhc2tMaXN0LlRh",
            "c2tSZXF1ZXN0GhMudGFza0xpc3QuVGFza1JlcGx5EjUKB0FkZFRhc2sSFS50",
            "YXNrTGlzdC5UYXNrUmVxdWVzdBoTLnRhc2tMaXN0LlRhc2tSZXBseRI4CgpV",
            "cGRhdGVUYXNrEhUudGFza0xpc3QuVGFza1JlcXVlc3QaEy50YXNrTGlzdC5U",
            "YXNrUmVwbHkSPQoPVXBkYXRlVGFza1N0YXRlEhUudGFza0xpc3QuVGFza1Jl",
            "cXVlc3QaEy50YXNrTGlzdC5UYXNrUmVwbHkSOAoKUmVtb3ZlVGFzaxIVLnRh",
            "c2tMaXN0LlRhc2tSZXF1ZXN0GhMudGFza0xpc3QuVGFza1JlcGx5EkQKD0dl",
            "dEFsbEV4ZWN1dG9ycxIVLnRhc2tMaXN0Lk51bGxSZXF1ZXN0GhoudGFza0xp",
            "c3QuQWxsRXhlY3V0b3JSZXBseRJBCgtHZXRFeGVjdXRvchIZLnRhc2tMaXN0",
            "LkV4ZWN1dG9yUmVxdWVzdBoXLnRhc2tMaXN0LkV4ZWN1dG9yUmVwbHkSQQoL",
            "QWRkRXhlY3V0b3ISGS50YXNrTGlzdC5FeGVjdXRvclJlcXVlc3QaFy50YXNr",
            "TGlzdC5FeGVjdXRvclJlcGx5EkQKDlVwZGF0ZUV4ZWN1dG9yEhkudGFza0xp",
            "c3QuRXhlY3V0b3JSZXF1ZXN0GhcudGFza0xpc3QuRXhlY3V0b3JSZXBseRJE",
            "Cg5SZW1vdmVFeGVjdXRvchIZLnRhc2tMaXN0LkV4ZWN1dG9yUmVxdWVzdBoX",
            "LnRhc2tMaXN0LkV4ZWN1dG9yUmVwbHkSOgoKR2V0QWxsVGFncxIVLnRhc2tM",
            "aXN0Lk51bGxSZXF1ZXN0GhUudGFza0xpc3QuQWxsVGFnUmVwbHkSMgoGR2V0",
            "VGFnEhQudGFza0xpc3QuVGFnUmVxdWVzdBoSLnRhc2tMaXN0LlRhZ1JlcGx5",
            "EjIKBkFkZFRhZxIULnRhc2tMaXN0LlRhZ1JlcXVlc3QaEi50YXNrTGlzdC5U",
            "YWdSZXBseRI1CglVcGRhdGVUYWcSFC50YXNrTGlzdC5UYWdSZXF1ZXN0GhIu",
            "dGFza0xpc3QuVGFnUmVwbHkSNQoJUmVtb3ZlVGFnEhQudGFza0xpc3QuVGFn",
            "UmVxdWVzdBoSLnRhc2tMaXN0LlRhZ1JlcGx5Ej0KDVJlbW92ZUFsbFRhZ3MS",
            "FS50YXNrTGlzdC5OdWxsUmVxdWVzdBoVLnRhc2tMaXN0Lk51bGxSZXF1ZXN0",
            "QhWqAhJUYXNrTGlzdEtodmF0c2tvdmFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TaskListKhvatskova.NullRequest), global::TaskListKhvatskova.NullRequest.Parser, new[]{ "ExaminationReply" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TaskListKhvatskova.TaskRequest), global::TaskListKhvatskova.TaskRequest.Parser, new[]{ "TaskId", "Name", "Description", "TaskState", "ExecutorId", "TagsId", "ExaminationReply" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TaskListKhvatskova.TaskReply), global::TaskListKhvatskova.TaskReply.Parser, new[]{ "TaskId", "Name", "Description", "TaskState", "ExecutorId", "TagsId", "ExaminationReply" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TaskListKhvatskova.AllTaskReply), global::TaskListKhvatskova.AllTaskReply.Parser, new[]{ "Tasks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TaskListKhvatskova.ExecutorReply), global::TaskListKhvatskova.ExecutorReply.Parser, new[]{ "ExaminationReply", "ExecutorId", "Name", "Surname" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TaskListKhvatskova.ExecutorRequest), global::TaskListKhvatskova.ExecutorRequest.Parser, new[]{ "ExecutorId", "Name", "Surname" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TaskListKhvatskova.AllExecutorReply), global::TaskListKhvatskova.AllExecutorReply.Parser, new[]{ "Executors" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TaskListKhvatskova.TagRequest), global::TaskListKhvatskova.TagRequest.Parser, new[]{ "TagId", "Name", "Color" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TaskListKhvatskova.TagReply), global::TaskListKhvatskova.TagReply.Parser, new[]{ "TagId", "Name", "Color", "ExaminationReply" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TaskListKhvatskova.AllTagReply), global::TaskListKhvatskova.AllTagReply.Parser, new[]{ "Tags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TaskListKhvatskova.ExaminationReply), global::TaskListKhvatskova.ExaminationReply.Parser, new[]{ "ArgumentException", "NotFoundException", "Problem" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class NullRequest : pb::IMessage<NullRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NullRequest> _parser = new pb::MessageParser<NullRequest>(() => new NullRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NullRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TaskListKhvatskova.TaskListReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NullRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NullRequest(NullRequest other) : this() {
      examinationReply_ = other.examinationReply_ != null ? other.examinationReply_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NullRequest Clone() {
      return new NullRequest(this);
    }

    /// <summary>Field number for the "examination_reply" field.</summary>
    public const int ExaminationReplyFieldNumber = 1;
    private global::TaskListKhvatskova.ExaminationReply examinationReply_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TaskListKhvatskova.ExaminationReply ExaminationReply {
      get { return examinationReply_; }
      set {
        examinationReply_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NullRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NullRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExaminationReply, other.ExaminationReply)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (examinationReply_ != null) hash ^= ExaminationReply.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (examinationReply_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExaminationReply);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (examinationReply_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExaminationReply);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (examinationReply_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExaminationReply);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NullRequest other) {
      if (other == null) {
        return;
      }
      if (other.examinationReply_ != null) {
        if (examinationReply_ == null) {
          ExaminationReply = new global::TaskListKhvatskova.ExaminationReply();
        }
        ExaminationReply.MergeFrom(other.ExaminationReply);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (examinationReply_ == null) {
              ExaminationReply = new global::TaskListKhvatskova.ExaminationReply();
            }
            input.ReadMessage(ExaminationReply);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (examinationReply_ == null) {
              ExaminationReply = new global::TaskListKhvatskova.ExaminationReply();
            }
            input.ReadMessage(ExaminationReply);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TaskRequest : pb::IMessage<TaskRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskRequest> _parser = new pb::MessageParser<TaskRequest>(() => new TaskRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TaskListKhvatskova.TaskListReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskRequest(TaskRequest other) : this() {
      taskId_ = other.taskId_;
      name_ = other.name_;
      description_ = other.description_;
      taskState_ = other.taskState_;
      executorId_ = other.executorId_;
      tagsId_ = other.tagsId_.Clone();
      examinationReply_ = other.examinationReply_ != null ? other.examinationReply_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskRequest Clone() {
      return new TaskRequest(this);
    }

    /// <summary>Field number for the "TaskId" field.</summary>
    public const int TaskIdFieldNumber = 1;
    private int taskId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskId {
      get { return taskId_; }
      set {
        taskId_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TaskState" field.</summary>
    public const int TaskStateFieldNumber = 4;
    private bool taskState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TaskState {
      get { return taskState_; }
      set {
        taskState_ = value;
      }
    }

    /// <summary>Field number for the "ExecutorId" field.</summary>
    public const int ExecutorIdFieldNumber = 5;
    private int executorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExecutorId {
      get { return executorId_; }
      set {
        executorId_ = value;
      }
    }

    /// <summary>Field number for the "TagsId" field.</summary>
    public const int TagsIdFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_tagsId_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> tagsId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> TagsId {
      get { return tagsId_; }
    }

    /// <summary>Field number for the "examination_reply" field.</summary>
    public const int ExaminationReplyFieldNumber = 7;
    private global::TaskListKhvatskova.ExaminationReply examinationReply_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TaskListKhvatskova.ExaminationReply ExaminationReply {
      get { return examinationReply_; }
      set {
        examinationReply_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskId != other.TaskId) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (TaskState != other.TaskState) return false;
      if (ExecutorId != other.ExecutorId) return false;
      if(!tagsId_.Equals(other.tagsId_)) return false;
      if (!object.Equals(ExaminationReply, other.ExaminationReply)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskId != 0) hash ^= TaskId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (TaskState != false) hash ^= TaskState.GetHashCode();
      if (ExecutorId != 0) hash ^= ExecutorId.GetHashCode();
      hash ^= tagsId_.GetHashCode();
      if (examinationReply_ != null) hash ^= ExaminationReply.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TaskId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TaskId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (TaskState != false) {
        output.WriteRawTag(32);
        output.WriteBool(TaskState);
      }
      if (ExecutorId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ExecutorId);
      }
      tagsId_.WriteTo(output, _repeated_tagsId_codec);
      if (examinationReply_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ExaminationReply);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TaskId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TaskId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (TaskState != false) {
        output.WriteRawTag(32);
        output.WriteBool(TaskState);
      }
      if (ExecutorId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ExecutorId);
      }
      tagsId_.WriteTo(ref output, _repeated_tagsId_codec);
      if (examinationReply_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ExaminationReply);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (TaskState != false) {
        size += 1 + 1;
      }
      if (ExecutorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExecutorId);
      }
      size += tagsId_.CalculateSize(_repeated_tagsId_codec);
      if (examinationReply_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExaminationReply);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskRequest other) {
      if (other == null) {
        return;
      }
      if (other.TaskId != 0) {
        TaskId = other.TaskId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.TaskState != false) {
        TaskState = other.TaskState;
      }
      if (other.ExecutorId != 0) {
        ExecutorId = other.ExecutorId;
      }
      tagsId_.Add(other.tagsId_);
      if (other.examinationReply_ != null) {
        if (examinationReply_ == null) {
          ExaminationReply = new global::TaskListKhvatskova.ExaminationReply();
        }
        ExaminationReply.MergeFrom(other.ExaminationReply);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TaskId = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 32: {
            TaskState = input.ReadBool();
            break;
          }
          case 40: {
            ExecutorId = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            tagsId_.AddEntriesFrom(input, _repeated_tagsId_codec);
            break;
          }
          case 58: {
            if (examinationReply_ == null) {
              ExaminationReply = new global::TaskListKhvatskova.ExaminationReply();
            }
            input.ReadMessage(ExaminationReply);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TaskId = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 32: {
            TaskState = input.ReadBool();
            break;
          }
          case 40: {
            ExecutorId = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            tagsId_.AddEntriesFrom(ref input, _repeated_tagsId_codec);
            break;
          }
          case 58: {
            if (examinationReply_ == null) {
              ExaminationReply = new global::TaskListKhvatskova.ExaminationReply();
            }
            input.ReadMessage(ExaminationReply);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TaskReply : pb::IMessage<TaskReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskReply> _parser = new pb::MessageParser<TaskReply>(() => new TaskReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TaskListKhvatskova.TaskListReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskReply(TaskReply other) : this() {
      taskId_ = other.taskId_;
      name_ = other.name_;
      description_ = other.description_;
      taskState_ = other.taskState_;
      executorId_ = other.executorId_;
      tagsId_ = other.tagsId_.Clone();
      examinationReply_ = other.examinationReply_ != null ? other.examinationReply_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskReply Clone() {
      return new TaskReply(this);
    }

    /// <summary>Field number for the "TaskId" field.</summary>
    public const int TaskIdFieldNumber = 1;
    private int taskId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskId {
      get { return taskId_; }
      set {
        taskId_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TaskState" field.</summary>
    public const int TaskStateFieldNumber = 4;
    private bool taskState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TaskState {
      get { return taskState_; }
      set {
        taskState_ = value;
      }
    }

    /// <summary>Field number for the "ExecutorId" field.</summary>
    public const int ExecutorIdFieldNumber = 5;
    private int executorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExecutorId {
      get { return executorId_; }
      set {
        executorId_ = value;
      }
    }

    /// <summary>Field number for the "TagsId" field.</summary>
    public const int TagsIdFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_tagsId_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> tagsId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> TagsId {
      get { return tagsId_; }
    }

    /// <summary>Field number for the "examination_reply" field.</summary>
    public const int ExaminationReplyFieldNumber = 7;
    private global::TaskListKhvatskova.ExaminationReply examinationReply_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TaskListKhvatskova.ExaminationReply ExaminationReply {
      get { return examinationReply_; }
      set {
        examinationReply_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskId != other.TaskId) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (TaskState != other.TaskState) return false;
      if (ExecutorId != other.ExecutorId) return false;
      if(!tagsId_.Equals(other.tagsId_)) return false;
      if (!object.Equals(ExaminationReply, other.ExaminationReply)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskId != 0) hash ^= TaskId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (TaskState != false) hash ^= TaskState.GetHashCode();
      if (ExecutorId != 0) hash ^= ExecutorId.GetHashCode();
      hash ^= tagsId_.GetHashCode();
      if (examinationReply_ != null) hash ^= ExaminationReply.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TaskId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TaskId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (TaskState != false) {
        output.WriteRawTag(32);
        output.WriteBool(TaskState);
      }
      if (ExecutorId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ExecutorId);
      }
      tagsId_.WriteTo(output, _repeated_tagsId_codec);
      if (examinationReply_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ExaminationReply);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TaskId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TaskId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (TaskState != false) {
        output.WriteRawTag(32);
        output.WriteBool(TaskState);
      }
      if (ExecutorId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ExecutorId);
      }
      tagsId_.WriteTo(ref output, _repeated_tagsId_codec);
      if (examinationReply_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ExaminationReply);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (TaskState != false) {
        size += 1 + 1;
      }
      if (ExecutorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExecutorId);
      }
      size += tagsId_.CalculateSize(_repeated_tagsId_codec);
      if (examinationReply_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExaminationReply);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskReply other) {
      if (other == null) {
        return;
      }
      if (other.TaskId != 0) {
        TaskId = other.TaskId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.TaskState != false) {
        TaskState = other.TaskState;
      }
      if (other.ExecutorId != 0) {
        ExecutorId = other.ExecutorId;
      }
      tagsId_.Add(other.tagsId_);
      if (other.examinationReply_ != null) {
        if (examinationReply_ == null) {
          ExaminationReply = new global::TaskListKhvatskova.ExaminationReply();
        }
        ExaminationReply.MergeFrom(other.ExaminationReply);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TaskId = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 32: {
            TaskState = input.ReadBool();
            break;
          }
          case 40: {
            ExecutorId = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            tagsId_.AddEntriesFrom(input, _repeated_tagsId_codec);
            break;
          }
          case 58: {
            if (examinationReply_ == null) {
              ExaminationReply = new global::TaskListKhvatskova.ExaminationReply();
            }
            input.ReadMessage(ExaminationReply);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TaskId = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 32: {
            TaskState = input.ReadBool();
            break;
          }
          case 40: {
            ExecutorId = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            tagsId_.AddEntriesFrom(ref input, _repeated_tagsId_codec);
            break;
          }
          case 58: {
            if (examinationReply_ == null) {
              ExaminationReply = new global::TaskListKhvatskova.ExaminationReply();
            }
            input.ReadMessage(ExaminationReply);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AllTaskReply : pb::IMessage<AllTaskReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AllTaskReply> _parser = new pb::MessageParser<AllTaskReply>(() => new AllTaskReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AllTaskReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TaskListKhvatskova.TaskListReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllTaskReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllTaskReply(AllTaskReply other) : this() {
      tasks_ = other.tasks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllTaskReply Clone() {
      return new AllTaskReply(this);
    }

    /// <summary>Field number for the "Tasks" field.</summary>
    public const int TasksFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TaskListKhvatskova.TaskReply> _repeated_tasks_codec
        = pb::FieldCodec.ForMessage(10, global::TaskListKhvatskova.TaskReply.Parser);
    private readonly pbc::RepeatedField<global::TaskListKhvatskova.TaskReply> tasks_ = new pbc::RepeatedField<global::TaskListKhvatskova.TaskReply>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TaskListKhvatskova.TaskReply> Tasks {
      get { return tasks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AllTaskReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AllTaskReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tasks_.Equals(other.tasks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tasks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      tasks_.WriteTo(output, _repeated_tasks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      tasks_.WriteTo(ref output, _repeated_tasks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tasks_.CalculateSize(_repeated_tasks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AllTaskReply other) {
      if (other == null) {
        return;
      }
      tasks_.Add(other.tasks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tasks_.AddEntriesFrom(input, _repeated_tasks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            tasks_.AddEntriesFrom(ref input, _repeated_tasks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ExecutorReply : pb::IMessage<ExecutorReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExecutorReply> _parser = new pb::MessageParser<ExecutorReply>(() => new ExecutorReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExecutorReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TaskListKhvatskova.TaskListReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutorReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutorReply(ExecutorReply other) : this() {
      examinationReply_ = other.examinationReply_ != null ? other.examinationReply_.Clone() : null;
      executorId_ = other.executorId_;
      name_ = other.name_;
      surname_ = other.surname_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutorReply Clone() {
      return new ExecutorReply(this);
    }

    /// <summary>Field number for the "examination_reply" field.</summary>
    public const int ExaminationReplyFieldNumber = 1;
    private global::TaskListKhvatskova.ExaminationReply examinationReply_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TaskListKhvatskova.ExaminationReply ExaminationReply {
      get { return examinationReply_; }
      set {
        examinationReply_ = value;
      }
    }

    /// <summary>Field number for the "ExecutorId" field.</summary>
    public const int ExecutorIdFieldNumber = 2;
    private int executorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExecutorId {
      get { return executorId_; }
      set {
        executorId_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Surname" field.</summary>
    public const int SurnameFieldNumber = 4;
    private string surname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Surname {
      get { return surname_; }
      set {
        surname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExecutorReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExecutorReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ExaminationReply, other.ExaminationReply)) return false;
      if (ExecutorId != other.ExecutorId) return false;
      if (Name != other.Name) return false;
      if (Surname != other.Surname) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (examinationReply_ != null) hash ^= ExaminationReply.GetHashCode();
      if (ExecutorId != 0) hash ^= ExecutorId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Surname.Length != 0) hash ^= Surname.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (examinationReply_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExaminationReply);
      }
      if (ExecutorId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ExecutorId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Surname.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Surname);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (examinationReply_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ExaminationReply);
      }
      if (ExecutorId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ExecutorId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Surname.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Surname);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (examinationReply_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExaminationReply);
      }
      if (ExecutorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExecutorId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Surname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Surname);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExecutorReply other) {
      if (other == null) {
        return;
      }
      if (other.examinationReply_ != null) {
        if (examinationReply_ == null) {
          ExaminationReply = new global::TaskListKhvatskova.ExaminationReply();
        }
        ExaminationReply.MergeFrom(other.ExaminationReply);
      }
      if (other.ExecutorId != 0) {
        ExecutorId = other.ExecutorId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Surname.Length != 0) {
        Surname = other.Surname;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (examinationReply_ == null) {
              ExaminationReply = new global::TaskListKhvatskova.ExaminationReply();
            }
            input.ReadMessage(ExaminationReply);
            break;
          }
          case 16: {
            ExecutorId = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Surname = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (examinationReply_ == null) {
              ExaminationReply = new global::TaskListKhvatskova.ExaminationReply();
            }
            input.ReadMessage(ExaminationReply);
            break;
          }
          case 16: {
            ExecutorId = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Surname = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ExecutorRequest : pb::IMessage<ExecutorRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExecutorRequest> _parser = new pb::MessageParser<ExecutorRequest>(() => new ExecutorRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExecutorRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TaskListKhvatskova.TaskListReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutorRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutorRequest(ExecutorRequest other) : this() {
      executorId_ = other.executorId_;
      name_ = other.name_;
      surname_ = other.surname_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExecutorRequest Clone() {
      return new ExecutorRequest(this);
    }

    /// <summary>Field number for the "ExecutorId" field.</summary>
    public const int ExecutorIdFieldNumber = 1;
    private int executorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExecutorId {
      get { return executorId_; }
      set {
        executorId_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Surname" field.</summary>
    public const int SurnameFieldNumber = 3;
    private string surname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Surname {
      get { return surname_; }
      set {
        surname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExecutorRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExecutorRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExecutorId != other.ExecutorId) return false;
      if (Name != other.Name) return false;
      if (Surname != other.Surname) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExecutorId != 0) hash ^= ExecutorId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Surname.Length != 0) hash ^= Surname.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ExecutorId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ExecutorId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Surname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Surname);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ExecutorId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ExecutorId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Surname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Surname);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExecutorId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExecutorId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Surname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Surname);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExecutorRequest other) {
      if (other == null) {
        return;
      }
      if (other.ExecutorId != 0) {
        ExecutorId = other.ExecutorId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Surname.Length != 0) {
        Surname = other.Surname;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ExecutorId = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Surname = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ExecutorId = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Surname = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AllExecutorReply : pb::IMessage<AllExecutorReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AllExecutorReply> _parser = new pb::MessageParser<AllExecutorReply>(() => new AllExecutorReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AllExecutorReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TaskListKhvatskova.TaskListReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllExecutorReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllExecutorReply(AllExecutorReply other) : this() {
      executors_ = other.executors_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllExecutorReply Clone() {
      return new AllExecutorReply(this);
    }

    /// <summary>Field number for the "Executors" field.</summary>
    public const int ExecutorsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TaskListKhvatskova.ExecutorReply> _repeated_executors_codec
        = pb::FieldCodec.ForMessage(10, global::TaskListKhvatskova.ExecutorReply.Parser);
    private readonly pbc::RepeatedField<global::TaskListKhvatskova.ExecutorReply> executors_ = new pbc::RepeatedField<global::TaskListKhvatskova.ExecutorReply>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TaskListKhvatskova.ExecutorReply> Executors {
      get { return executors_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AllExecutorReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AllExecutorReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!executors_.Equals(other.executors_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= executors_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      executors_.WriteTo(output, _repeated_executors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      executors_.WriteTo(ref output, _repeated_executors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += executors_.CalculateSize(_repeated_executors_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AllExecutorReply other) {
      if (other == null) {
        return;
      }
      executors_.Add(other.executors_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            executors_.AddEntriesFrom(input, _repeated_executors_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            executors_.AddEntriesFrom(ref input, _repeated_executors_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TagRequest : pb::IMessage<TagRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TagRequest> _parser = new pb::MessageParser<TagRequest>(() => new TagRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TagRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TaskListKhvatskova.TaskListReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagRequest(TagRequest other) : this() {
      tagId_ = other.tagId_;
      name_ = other.name_;
      color_ = other.color_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagRequest Clone() {
      return new TagRequest(this);
    }

    /// <summary>Field number for the "TagId" field.</summary>
    public const int TagIdFieldNumber = 1;
    private int tagId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TagId {
      get { return tagId_; }
      set {
        tagId_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Color" field.</summary>
    public const int ColorFieldNumber = 3;
    private string color_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Color {
      get { return color_; }
      set {
        color_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TagRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TagRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TagId != other.TagId) return false;
      if (Name != other.Name) return false;
      if (Color != other.Color) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TagId != 0) hash ^= TagId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Color.Length != 0) hash ^= Color.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TagId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TagId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Color.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Color);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TagId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TagId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Color.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Color);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TagId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TagId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Color.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Color);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TagRequest other) {
      if (other == null) {
        return;
      }
      if (other.TagId != 0) {
        TagId = other.TagId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Color.Length != 0) {
        Color = other.Color;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TagId = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Color = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TagId = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Color = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TagReply : pb::IMessage<TagReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TagReply> _parser = new pb::MessageParser<TagReply>(() => new TagReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TagReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TaskListKhvatskova.TaskListReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagReply(TagReply other) : this() {
      tagId_ = other.tagId_;
      name_ = other.name_;
      color_ = other.color_;
      examinationReply_ = other.examinationReply_ != null ? other.examinationReply_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TagReply Clone() {
      return new TagReply(this);
    }

    /// <summary>Field number for the "TagId" field.</summary>
    public const int TagIdFieldNumber = 1;
    private int tagId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TagId {
      get { return tagId_; }
      set {
        tagId_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Color" field.</summary>
    public const int ColorFieldNumber = 3;
    private string color_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Color {
      get { return color_; }
      set {
        color_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "examination_reply" field.</summary>
    public const int ExaminationReplyFieldNumber = 4;
    private global::TaskListKhvatskova.ExaminationReply examinationReply_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TaskListKhvatskova.ExaminationReply ExaminationReply {
      get { return examinationReply_; }
      set {
        examinationReply_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TagReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TagReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TagId != other.TagId) return false;
      if (Name != other.Name) return false;
      if (Color != other.Color) return false;
      if (!object.Equals(ExaminationReply, other.ExaminationReply)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TagId != 0) hash ^= TagId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Color.Length != 0) hash ^= Color.GetHashCode();
      if (examinationReply_ != null) hash ^= ExaminationReply.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TagId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TagId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Color.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Color);
      }
      if (examinationReply_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExaminationReply);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TagId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TagId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Color.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Color);
      }
      if (examinationReply_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ExaminationReply);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TagId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TagId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Color.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Color);
      }
      if (examinationReply_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExaminationReply);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TagReply other) {
      if (other == null) {
        return;
      }
      if (other.TagId != 0) {
        TagId = other.TagId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Color.Length != 0) {
        Color = other.Color;
      }
      if (other.examinationReply_ != null) {
        if (examinationReply_ == null) {
          ExaminationReply = new global::TaskListKhvatskova.ExaminationReply();
        }
        ExaminationReply.MergeFrom(other.ExaminationReply);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TagId = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Color = input.ReadString();
            break;
          }
          case 34: {
            if (examinationReply_ == null) {
              ExaminationReply = new global::TaskListKhvatskova.ExaminationReply();
            }
            input.ReadMessage(ExaminationReply);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TagId = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Color = input.ReadString();
            break;
          }
          case 34: {
            if (examinationReply_ == null) {
              ExaminationReply = new global::TaskListKhvatskova.ExaminationReply();
            }
            input.ReadMessage(ExaminationReply);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AllTagReply : pb::IMessage<AllTagReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AllTagReply> _parser = new pb::MessageParser<AllTagReply>(() => new AllTagReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AllTagReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TaskListKhvatskova.TaskListReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllTagReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllTagReply(AllTagReply other) : this() {
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllTagReply Clone() {
      return new AllTagReply(this);
    }

    /// <summary>Field number for the "Tags" field.</summary>
    public const int TagsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TaskListKhvatskova.TagReply> _repeated_tags_codec
        = pb::FieldCodec.ForMessage(10, global::TaskListKhvatskova.TagReply.Parser);
    private readonly pbc::RepeatedField<global::TaskListKhvatskova.TagReply> tags_ = new pbc::RepeatedField<global::TaskListKhvatskova.TagReply>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TaskListKhvatskova.TagReply> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AllTagReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AllTagReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tags_.Equals(other.tags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      tags_.WriteTo(output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      tags_.WriteTo(ref output, _repeated_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AllTagReply other) {
      if (other == null) {
        return;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            tags_.AddEntriesFrom(ref input, _repeated_tags_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ExaminationReply : pb::IMessage<ExaminationReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExaminationReply> _parser = new pb::MessageParser<ExaminationReply>(() => new ExaminationReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExaminationReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TaskListKhvatskova.TaskListReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExaminationReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExaminationReply(ExaminationReply other) : this() {
      argumentException_ = other.argumentException_;
      notFoundException_ = other.notFoundException_;
      problem_ = other.problem_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExaminationReply Clone() {
      return new ExaminationReply(this);
    }

    /// <summary>Field number for the "argument_exception" field.</summary>
    public const int ArgumentExceptionFieldNumber = 1;
    private bool argumentException_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ArgumentException {
      get { return argumentException_; }
      set {
        argumentException_ = value;
      }
    }

    /// <summary>Field number for the "not_found_exception" field.</summary>
    public const int NotFoundExceptionFieldNumber = 2;
    private bool notFoundException_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NotFoundException {
      get { return notFoundException_; }
      set {
        notFoundException_ = value;
      }
    }

    /// <summary>Field number for the "problem" field.</summary>
    public const int ProblemFieldNumber = 3;
    private bool problem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Problem {
      get { return problem_; }
      set {
        problem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExaminationReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExaminationReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ArgumentException != other.ArgumentException) return false;
      if (NotFoundException != other.NotFoundException) return false;
      if (Problem != other.Problem) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ArgumentException != false) hash ^= ArgumentException.GetHashCode();
      if (NotFoundException != false) hash ^= NotFoundException.GetHashCode();
      if (Problem != false) hash ^= Problem.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ArgumentException != false) {
        output.WriteRawTag(8);
        output.WriteBool(ArgumentException);
      }
      if (NotFoundException != false) {
        output.WriteRawTag(16);
        output.WriteBool(NotFoundException);
      }
      if (Problem != false) {
        output.WriteRawTag(24);
        output.WriteBool(Problem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ArgumentException != false) {
        output.WriteRawTag(8);
        output.WriteBool(ArgumentException);
      }
      if (NotFoundException != false) {
        output.WriteRawTag(16);
        output.WriteBool(NotFoundException);
      }
      if (Problem != false) {
        output.WriteRawTag(24);
        output.WriteBool(Problem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ArgumentException != false) {
        size += 1 + 1;
      }
      if (NotFoundException != false) {
        size += 1 + 1;
      }
      if (Problem != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExaminationReply other) {
      if (other == null) {
        return;
      }
      if (other.ArgumentException != false) {
        ArgumentException = other.ArgumentException;
      }
      if (other.NotFoundException != false) {
        NotFoundException = other.NotFoundException;
      }
      if (other.Problem != false) {
        Problem = other.Problem;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ArgumentException = input.ReadBool();
            break;
          }
          case 16: {
            NotFoundException = input.ReadBool();
            break;
          }
          case 24: {
            Problem = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ArgumentException = input.ReadBool();
            break;
          }
          case 16: {
            NotFoundException = input.ReadBool();
            break;
          }
          case 24: {
            Problem = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
